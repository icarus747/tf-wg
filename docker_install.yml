---
- hosts: all
  become: true
  vars:
    container_count: 1
    default_container_name: wireguard
    default_container_image: lscr.io/linuxserver/wireguard
    default_file_ower: ubuntu
    # default_container_command: sleep 1d

  tasks:
    - name: Wait for apt to unlock
      become: yes
      shell:  while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true
        
    - name: Install Docker-Compose plugin
      apt:
        name: docker-compose-plugin
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull wireguard image
      community.docker.docker_image:
        name: lscr.io/linuxserver/wireguard
        source: pull

    - name: Create wireguard
      community.docker.docker_container:
        name: wireguard
        image: lscr.io/linuxserver/wireguard
        # state: "absent"
        capabilities:
          - "NET_ADMIN"
          - "SYS_MODULE"
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "America/Chicago"
          SERVERURL: "{{ SERVERURL }}"
          SERVERPORT: "51820"
        published_ports:
          - "51821:51820/udp"
        sysctls:
          net.ipv4.conf.all.src_valid_mark: "1"
        restart: true
        volumes:
          - /opt/config:/config

    - name: Copy wg0.conf file
      ansible.builtin.copy:
        src: ./wg0.conf
        dest: /opt/config/wg_confs/wg0.conf
        owner: "{{ default_file_ower }}"
        group: "{{ default_file_ower }}"
        mode: '0600'

    - name: Restart wireguard
      community.docker.docker_container:
        name: wireguard
        restart: true
